<Window x:Class="FotoFaultFixerUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FotoFaultFixerUI"
        mc:Ignorable="d"
        Title="FotoFaultFixer" Height="450" Width="800"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <!--<materialDesign:DrawerHost LeftDrawerBackground="{DynamicResource MaterialDesignPaper}">
        <materialDesign:DrawerHost.LeftDrawerContent>
            <StackPanel Width="150">
                <TextBlock Text="Some left content" HorizontalAlignment="Center"/>
                <materialDesign:PackIcon Kind="Headset" Height="Auto" Width="Auto" />
            </StackPanel>
        </materialDesign:DrawerHost.LeftDrawerContent>

        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            -->
    <!-- Binding the Is*DrawerOpen, you can also bind this to a boolean in your view model -->
    <!--
            <ToggleButton Content="L" 
                          IsChecked="{Binding IsLeftDrawerOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type materialDesign:DrawerHost}}}" 
                          Style="{StaticResource MaterialDesignActionLightToggleButton}" 
                          ToolTip="Open Left Drawer"/>
            -->
    <!-- Open the drawer with a routed command -->
    <!-- You can either specify a specific side by passing a Dock command parameter, or null to open all sides -->
    <!--
            <Button Content="Open Left Drawer" Margin="10" 
                    Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}" CommandParameter="{x:Static Dock.Left}"/>

            <materialDesign:Card Padding="10" Margin="10">
                <TextBlock Style="{DynamicResource MaterialDesignHeadline6TextBlock}">FotoFaultFixerUI</TextBlock>
            </materialDesign:Card>
        </StackPanel>

    </materialDesign:DrawerHost>-->

    <Grid>
        <StackPanel>
            <materialDesign:Card Padding="10" Margin="10">
                <DockPanel HorizontalAlignment="Stretch">
                    <TextBlock Style="{DynamicResource MaterialDesignHeadline6TextBlock}">Foto Fault-Fixer</TextBlock>
                    <Button Name="exitBtn" 
                            Click="exitBtn_Click"
                        Style="{StaticResource MaterialDesignToolButton}" 
                        HorizontalAlignment="Right" Width="40">
                        X
                    </Button>
                </DockPanel>
            </materialDesign:Card>

            <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackPanel Grid.Column="0" Grid.Row="0">
                    <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="75px"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <materialDesign:Card
                            Grid.Column="0" Grid.Row="0"
                            Padding="10" Margin="10">
                            <DockPanel HorizontalAlignment="Stretch">
                                <TextBlock VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource MaterialDesignHeadline6TextBlock}">Original</TextBlock>
                                <Button Name="selectImageBtn" Click="selectImageBtn_Click" 
                                    Style="{StaticResource MaterialDesignRaisedButton}" 
                                    HorizontalAlignment="Right" Width="100">
                                    Select
                                </Button>
                            </DockPanel>
                        </materialDesign:Card>
                        <materialDesign:Card 
                            Grid.Column="0" Grid.Row="1"
                            Padding="10" Margin="10">
                            <Image Grid.Column="0" Grid.Row="1"
                                Name="originalImage" 
                                   
                               RenderOptions.BitmapScalingMode="Fant"
                               Stretch="Uniform"
                               VerticalAlignment="Top"
                               HorizontalAlignment="Center">
                            </Image>
                        </materialDesign:Card>
                    </Grid>
                </StackPanel>

                <StackPanel Grid.Column="1" Grid.Row="0">
                    <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="75px"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <materialDesign:Card Grid.Column="0" Grid.Row="0"
                            Padding="10" Margin="10">
                            <DockPanel HorizontalAlignment="Stretch">
                                <TextBlock VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource MaterialDesignHeadline6TextBlock}">Modified</TextBlock>
                                <Button Name="modifyImageBtn" Click="modifyImageBtn_Click"
                                        Style="{StaticResource MaterialDesignRaisedButton}" 
                                        HorizontalAlignment="Right" Width="100">
                                    Fix
                                </Button>
                            </DockPanel>
                        </materialDesign:Card>
                        <materialDesign:Card 
                            Grid.Column="0" Grid.Row="1"
                            Padding="10" Margin="10">

                            <Image 
                                Name="modifiedImage"
                               RenderOptions.BitmapScalingMode="Fant"
                               Stretch="Uniform"                         
                               VerticalAlignment="Top"
                               HorizontalAlignment="Center">
                            </Image>
                        </materialDesign:Card>
                    </Grid>
                </StackPanel>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
